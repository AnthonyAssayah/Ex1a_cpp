#include "doctest.h"
#include "mat.hpp"
using namespace ariel;

#include <string>
#include <algorithm>
using namespace std;


string nospaces(string input) {
	std::erase(input, ' ');
	std::erase(input, '\t');
	std::erase(input, '\n');
	std::erase(input, '\r');
	return input;
}



// only one character
TEST_CASE("Good input") {
    CHECK(nospaces(mat(1, 1, '=', ':')) == nospaces("=\n"));
}


// matrix 3 x 3
TEST_CASE("Good input") {
    CHECK(nospaces(mat(3, 3, '$', '+')) == nospaces("$$$\n"
													"$+$\n"
													"$$$\n"));
}

TEST_CASE("Good input") {
    CHECK(nospaces(mat(3, 15, '~', '=')) == nospaces("~~~~~~~~~~~~~~~\n"
													 "~=============~\n"
													 "~~~~~~~~~~~~~~~\n"));
}

// one line 
TEST_CASE("Good input") {
    CHECK(nospaces(mat(49, 1, '*', '+')) == nospaces("*************************************************\n"));

}

// two lines
TEST_CASE("Good input") {
    CHECK(nospaces(mat(49, 1, '+', '*')) == nospaces("+++++++++++++++++++++++++++++++++++++++++++++++++\n"
													 "+++++++++++++++++++++++++++++++++++++++++++++++++\n"));

}


TEST_CASE("Good input") {
    CHECK(nospaces(mat(5, 5, '=', '/')) == nospaces("=====\n"
												    "=///=\n"
													"=/=/=\n"
													"=///=\n"
													"=====\n"));
}

// 2 columns
TEST_CASE("Good input") {
    CHECK(nospaces(mat(2, 21, '$', '+')) == nospaces("$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
													 "$$\n"
												     "$$\n"));
}

TEST_CASE("Good input") {
	CHECK(nospaces(mat(11, 11, '@', '-')) == nospaces("@@@@@@@@@@@\n"
													  "@---------@\n"
													  "@-@@@@@@@-@\n"
													  "@-@-----@-@\n"
													  "@-@-@@@-@-@\n"
													  "@-@-@-@-@-@\n"
													  "@-@-@@@-@-@\n"
													  "@-@-----@-@\n"
													  "@-@@@@@@@-@\\n"
													  "@---------@\\n"
													  "@@@@@@@@@@@\n"));
	
}



TEST_CASE("Good input") {
	CHECK(nospaces(mat(9, 7, '@', '-')) == nospaces("@@@@@@@@@\n"
													"@-------@\n"
													"@-@@@@@-@\n"
													"@-@---@-@\n"
													"@-@@@@@-@\n"
													"@-------@\n"
													"@@@@@@@@@"));
	
}

TEST_CASE("Good input") {
    CHECK(nospaces(mat(15, 7, '#', '~')) == nospaces("###############\n"
                                                     "#~~~~~~~~~~~~~#\n"
                                                     "#~###########~#\n"
                                                     "#~#~~~~~~~~~#~#\n"
                                                     "#~###########~#\n"
                                                     "#~~~~~~~~~~~~~#\n"
                                                     "###############"));
}

// big case
TEST_CASE("Good input") {
    CHECK(nospaces(mat(25, 25, '&', '!')) == nospaces("&&&&&&&&&&&&&&&&&&&&&&&&&\n"
													  "&!!!!!!!!!!!!!!!!!!!!!!!&\n"
													  "&!&&&&&&&&&&&&&&&&&&&&&!&\n"
													  "&!&!!!!!!!!!!!!!!!!!!!&!&\n"
													  "&!&!&&&&&&&&&&&&&&&&&!&!&\n"
													  "&!&!&!!!!!!!!!!!!!!!&!&!&\n"
													  "&!&!&!&&&&&&&&&&&&&!&!&!&\n"
													  "&!&!&!&!!!!!!!!!!!&!&!&!&\n"
													  "&!&!&!&!&&&&&&&&&!&!&!&!&\n"
													  "&!&!&!&!&!!!!!!!&!&!&!&!&\n"
													  "&!&!&!&!&!&&&&&!&!&!&!&!&\n"
													  "&!&!&!&!&!&!!!&!&!&!&!&!&\n"
													  "&!&!&!&!&!&!&!&!&!&!&!&!&\n"
													  "&!&!&!&!&!&!!!&!&!&!&!&!&\n"
													  "&!&!&!&!&!&&&&&!&!&!&!&!&\n"
													  "&!&!&!&!&!!!!!!!&!&!&!&!&\n"
													  "&!&!&!&!&&&&&&&&&!&!&!&!&\n"
													  "&!&!&!!!!!!!!!!!!!!!&!&!&\n"
													  "&!&!&!&&&&&&&&&&&&&!&!&!&\n"
													  "&!&!&!!!!!!!!!!!!!!!&!&!&\n"
													  "&!&!&&&&&&&&&&&&&&&&&!&!&\n"
													  "&!&!!!!!!!!!!!!!!!!!!!&!&\n"
													  "&!&&&&&&&&&&&&&&&&&&&&&!&\n"
													  "&!!!!!!!!!!!!!!!!!!!!!!!&\n"
													  "&!&&&&&&&&&&&&&&&&&&&&&!&\n"));
}



// very big case
TEST_CASE("Good input") {
    CHECK(nospaces(mat(23, 37, '?', '^')) == nospaces("?????????????????????????????????????\n"
                                                      "?^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^?\n"
                                                      "?^?????????????????????????????????^?\n"
                                                      "?^?^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^?^?\n"
                                                      "?^?^?????????????????????????????^?^?\n"
                                                      "?^?^?^^^^^^^^^^^^^^^^^^^^^^^^^^^?^?^?\n"
                                                      "?^?^?^?????????????????????????^?^?^?\n"
                                                      "?^?^?^?^^^^^^^^^^^^^^^^^^^^^^^?^?^?^?\n"
													  "?^?^?^?^?????????????????????^?^?^?^?\n"
                                                      "?^?^?^?^?^^^^^^^^^^^^^^^^^^^?^?^?^?^?\n"
                                                      "?^?^?^?^?^?^^^^^^^^^^^^^^^?^?^?^?^?^?\n"
                                                      "?^?^?^?^?^?^???????????^?^?^?^?^?^?^?\n"
													  "?^?^?^?^?^?^^^^^^^^^^^^^^^?^?^?^?^?^?\n"
                                                      "?^?^?^?^?^^^^^^^^^^^^^^^^^^^?^?^?^?^?\n"
                                                      "?^?^?^?^?????????????????????^?^?^?^?\n"
                                                      "?^?^?^?^^^^^^^^^^^^^^^^^^^^^^^?^?^?^?\n"
													  "?^?^?^?????????????????????????^?^?^?\n"
                                                      "?^?^?^^^^^^^^^^^^^^^^^^^^^^^^^^^?^?^?\n"
                                                      "?^?^?????????????????????????????^?^?\n"
                                                      "?^?^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^?^?\n"
													  "?^?????????????????????????????????^?\n"
                                                      "?^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^?\n"
                                                      "?????????????????????????????????????\n"));
                                                      
}


TEST_CASE("Bad input") {
	CHECK_THROWS(mat(0, 0, '$', '%'));  			 // zero and zero
	CHECK_THROWS(mat(2, 2, '~', '='));				 // matrix 2 x 2
    CHECK_THROWS(mat(10, 5, '$', '%'));				 // even and odd
	CHECK_THROWS(mat(23, 50, '$', '%'));             // odd and even
	CHECK_THROWS(mat(12, 200, '$', '%'));            // even and even
	CHECK_THROWS(mat(500, 500, '$', '%'));           // two big even
	CHECK_THROWS(mat(480, 3, '$', '%'));			 // one big even and odd
	CHECK_THROWS(mat(701, 20, '$', '%'));			 // one big odd and even
    
}
